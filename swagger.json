{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.5",
    "title": "PowerPulse-group5",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://powerpulse-group5-backend.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercises endpoints"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    }
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Logout object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/avatars": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Add user data",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add user data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserDataRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUserDataResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/params": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Add user data",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add user data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserParamsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserParamsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/exercises/": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get all exercises",
        "parameters": [
          {
						"in": "path",
						"name": "filter",
						"required": true,
						"type": "string",
						"description":	""
					},
          {
						"in": "path",
						"name": "value",
						"required": true,
						"type": "string",
						"description":	""
					}
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExercisesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/exercises/filters/": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get exercises by type",
        "parameters": [
         
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExercisesFilterResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/categories": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all categories products",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesProductsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsByBloodTypeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/diary/addproduct": {
      "post": {
        "tags": ["Diary"],
        "summary": "Add products",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add product by id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryAddProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created newProductDiary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryAddProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/diary/delproduct": {
      "delete": {
        "tags": ["Diary"],
        "summary": "Delete products",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Delete product by id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryAddProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryDeleteProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/diary/addexercise": {
      "post": {
        "tags": ["Diary"],
        "summary": "Add exercise",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add exercise by id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryAddExerciseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created newExerciseDiary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryAddExerciseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/diary/delexercise": {
      "delete": {
        "tags": ["Diary"],
        "summary": "Delete exercise",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Delete exercise by id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryDeleteExerciseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryDeleteExerciseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/diary/": {
      "get": {
        "tags": ["Diary"],
        "summary": "Get Diary",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "type": "date",
            "description":	"date: DD/MM/YYYY"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryGetResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "qwerty123"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "qwe123"
          }
        }
      },
      "LogoutRequest": {
        "type": "object",
        "required": ["token"],
        "properties": {
          "token": {
            "type": "string",
            "description": "User token"
          }
        }
      },
      "AvatarRequest": {
        "type": "file"
       
      },
      "AddUserDataRequest": {
        "type": "object",
        "required": [
          "height",
          "currentWeight",
          "desiredWeight",
          "birthday",
          "blood",
          "sex",
          "levelActivity"
        ],
        "properties": {
          "height": {
            "type": "number",
            "default": 150,
            "description": "User height"
          },
          "currentWeight": {
            "type": "number",
            "default": 120,
            "description": "User current Weight"
          },
          "desiredWeight": {
            "type": "number",
            "default": 60,
            "description": "User desired Weight"
          },
          "birthday": {
            "type": "date",
            "description": "User Date birthday"
          },
          "blood": {
            "type": "number",
            "default": 1,
            "description": "User blood group"
          },
          "sex": {
            "type": "string",
            "description": "User sex"
          },
          "levelActivity": {
            "type": "number",
            "default": 1,
            "description": "User level Activity"
          }
        }
      },
      "GetUserParamsRequest": {
        "type": "object",
        "required": [
          "name",
          "height",
          "currentWeight",
          "desiredWeight",
          "birthday",
          "blood",
          "sex",
          "levelActivity"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name"
          },
          "height": {
            "type": "number",
            "default": 150,
            "description": "User height"
          },
          "currentWeight": {
            "type": "number",
            "default": 120,
            "description": "User current Weight"
          },
          "desiredWeight": {
            "type": "number",
            "default": 60,
            "description": "User desired Weight"
          },
          "birthday": {
            "type": "date",
            "description": "User Date birthday"
          },
          "blood": {
            "type": "number",
            "default": 4,
            "description": "User blood group"
          },
          "sex": {
            "type": "string",
            "description": "User sex"
          },
          "levelActivity": {
            "type": "number",
            "default": 1,
            "description": "User level Activity"
          }
        }
      },
      "ProductsByBloodTypeResponseRequest": {

      },
      "DiaryAddProductRequest": {
        "type": "object",
        "required": ["productId", "date", "amount", "calories"],
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product id"
          },
          "date": {
            "type": "string",
            "description": "Date added product",
            "example": "DD/MM/YYYY"
          },
          "amount": {
            "type": "number",
            "description": "Number of grams",
            "example": "100"
          },
          "calories": {
            "type": "number",
            "description": "Number of calories"
          }
        }
      },
      "DiaryDeleteProductRequest": {
        "type": "object",
        "required": ["productId", "date"],
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product id"
          },
          "date": {
            "type": "string",
            "example": "DD/MM/YYYY"
          }
        }
      },
      "DiaryAddExerciseRequest": {
        "type": "object",
        "required": ["exerciseId", "date", "time", "calories"],
        "properties": {
          "exerciseId": {
            "type": "string",
            "description": "Exercise id"
          },
          "date": {
            "type": "string",
            "description": "Date added product",
            "example": "DD/MM/YYYY"
          },
          "time": {
            "type": "number",
            "description": "Number of calories"
          },
          "calories": {
            "type": "number",
            "description": "Exercise time"
          }
        }
      },
      "DiaryDeleteExerciseRequest": {
        "type": "object",
        "required": ["exerciseId", "date"],
        "properties": {
          "exerciseId": {
            "type": "string",
            "description": "exercise id"
          },
          "date": {
            "type": "string",
            "example": "DD/MM/YYYY"
          }
        }
      },
      "DiaryGetRequest": {
        "type": "object",
        "required": ["date"],
        "properties": {
          "date": {
            "type": "string",
            "description": " ",
            "example": "DD/MM/YYYY"
          }
        }
      },

      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User name"
              },
              "email": {
                "type": "string",
                "description": "User email"
              }
            }
          },
          "token": {
            "type": "string",
            "descroption": "Message"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User name"
              },
              "email": {
                "type": "string",
                "description": "User email"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User token"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User name"
              },
              "email": {
                "type": "string",
                "description": "User email"
              }
            }
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "descroption": "Message",
            "example": "Logout success"
          }
        }
      },
      "AvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "descroption": "New avatar URL"
          }
        }
      },
      "AddUserDataResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "descroption": "User id"
          },
          "name": {
            "type": "string",
            "descroption": "User name"
          },
          "email": {
            "type": "string",
            "descroption": "User email"
          },
          "height": {
            "type": "number",
            "description": "User height"
          },
          "currentWeight": {
            "type": "number",
            "description": "User current Weight"
          },
          "desiredWeight": {
            "type": "number",
            "description": "User desired Weight"
          },
          "birthday": {
            "type": "date",
            "description": "User Date birthday"
          },
          "blood": {
            "type": "number",
            "description": "User blood group"
          },
          "sex": {
            "type": "string",
            "description": "User sex"
          },
          "levelActivity": {
            "type": "number",
            "description": "User level Activity"
          },
          "token": {
            "type": "string",
            "descroption": "User token"
          },
          "bmr": {
            "type": "number",
            "descroption": "User bmr"
          }
        }
      },
      "GetUserParamsResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "descroption": "User id"
          },
          "name": {
            "type": "string",
            "descroption": "User name"
          },
          "email": {
            "type": "string",
            "descroption": "User email"
          },
          "height": {
            "type": "number",
            "description": "User height"
          },
          "currentWeight": {
            "type": "number",
            "description": "User current Weight"
          },
          "desiredWeight": {
            "type": "number",
            "description": "User desired Weight"
          },
          "birthday": {
            "type": "date",
            "description": "User Date birthday"
          },
          "blood": {
            "type": "number",
            "description": "User blood group"
          },
          "sex": {
            "type": "string",
            "description": "User sex"
          },
          "levelActivity": {
            "type": "number",
            "description": "User level Activity"
          },
          "token": {
            "type": "string",
            "descroption": "User token"
          },
          "bmr": {
            "type": "number",
            "descroption": "User bmr"
          }
        }
      },
      "ExercisesResponse": {
        "type": "array",
        "description": "Array with objects ",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Exercise id"
            },
            "bodyPart": {
              "type": "string",
              "description": "Affected body part"
            },
            "equipment": {
              "type": "string",
              "description": "Necessary equipment"
            },
            "gifUrl": {
              "type": "string",
              "description": "URL to the example gif"
            },
            "name": {
              "type": "string",
              "description": "Exercise name"
            },
            "target": {
              "type": "string",
              "description": "Aim of exercise"
            },
            "burnedCalories": {
              "type": "number",
              "description": "Burns calories"
            },
            "time": {
              "type": "number",
              "description": "Time of the exercise"
            }
          }
        }
      },
      "ExercisesFilterResponse": {
        "type": "array",
        "description": "Array with objects ",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "item id"
            },
            "filter": {
              "type": "string",
              "description": "Filter by item"
            },
            "name": {
              "type": "string",
              "description": "item name"
            },
            "imgURL": {
              "type": "string",
              "description": "Image URL"
            }
          }
        }
      },
      "CategoriesProductsResponse": {
        "type": "array",
        "description": "Array with Categories Products",
        "properties": {
          "type": "string",
          "description": "Categories Products"
        }
      },
      "ProductsByBloodTypeResponse": {
        "type": "array",
        "description": "Array with objects ",
        "items": {
          "type": "object",
          "properties": {}
        }
      },
      "DiaryAddProductResponse": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Owner"
          },
          "date": {
            "type": "string",
            "description": "Add date",
            "example": "dd/mm/yyyy"
          },
          "amountAll": {
            "type": "number",
            "description": "amountAll"
          },
          "calories": {
            "type": "number",
            "description": "Calories"
          },
          "burnedCalories": {
            "type": "number",
            "description": "Вurned Calories"
          },
          "ExercisesTime": {
            "type": "number",
            "description": "Exercises Time"
          },
          "product": {
            "type": "array",
            "description": "Array with objects ",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "description": "Product id"
                },
                "category": {
                  "type": "string",
                  "description": "Food category"
                },
                "amount": {
                  "type": "number",
                  "description": " "
                }
              }
            }
          },
          "exercises": {
            "type": "array",
            "description": "Array with objects ",
            "items": {
              "type": "object",
              "properties": {
                "exercisetId": {
                  "type": "string",
                  "description": "Product id"
                },
                "calories": {
                  "type": "number",
                  "description": "Food calories"
                },
                "time": {
                  "type": "number",
                  "description": " "
                }
              }
            }
          }
        }
      },
      "DiaryAddExerciseResponse": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Owner"
          },
          "date": {
            "type": "string",
            "description": "Add date",
            "example": "dd/mm/yyyy"
          },
          "calories": {
            "type": "number",
            "description": "Calories"
          },
          "burnedCalories": {
            "type": "number",
            "description": "Вurned Calories"
          },
          "ExercisesTime": {
            "type": "number",
            "description": "Exercises Time"
          },
          "exercises": {
            "type": "array",
            "description": "Array with objects ",
            "items": {
              "type": "object",
              "properties": {
                "exerciseId": {
                  "type": "string",
                  "description": "Product id"
                },
                "calories": {
                  "type": "number",
                  "description": "Food calories"
                },
                "time": {
                  "type": "number",
                  "description": " "
                }
              }
            }
          },
          "product": {
            "type": "array",
            "description": "Array with objects ",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "description": "Product id"
                },
                "category": {
                  "type": "string",
                  "description": "Food category"
                },
                "amount": {
                  "type": "number",
                  "description": " "
                }
              }
            }
          }
        }
      },
      "DiaryDeleteProductResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "descroption": "Message"
          }
        }
      },
      "DiaryDeleteExerciseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "descroption": "Message"
          }
        }
      },
      "DiaryGetResponse": {
        "type": "object",
        "properties": {
          "exercises": {
            "type": "array",
            "description": "Array with objects ",
            "items": {
              "type": "object",
              "properties": {
                "type": "string"
              }
            }
          },
          "product": {
            "type": "array",
            "description": "Array with objects ",
            "items": {
              "type": "object",
              "properties": {
                "type": "string"
              }
            }
          }
        }
      },

      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "descroption": "Message"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
